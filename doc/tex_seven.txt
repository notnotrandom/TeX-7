*tex_seven.txt* 

                                      TeX-7                                  

                        A semi-automatic, prefix-operated                    
                                  LaTeX ftplugin                               
                             with lots of firepower!                         


    Author: Ã“scar Pereira
    Email: See https://randomwalk.eu
    License: GPL
    Version: 0.1

    TeX-7 is a ftplugin that aims to enhance the writing experience of high
    quality documents with LaTeX and Vim. The goal of TeX-7 is to be simple
    and Vimish, meaning that focus is on carefully thought-out key mappings
    and features that are already present in a typical Vim installation. If
    you need to write a thesis or research articles and insist on having
    only one editor for all editing tasks, then TeX-7 is for you!

    TeX-7 uses Python2.x as its backend and therefore a Vim installation
    with Python support is required. TeX-7 is being developed on Linux
    running Vim 7.4.

     The main features of TeX-7 are
        * Compile, debug and launch a document viewer from within Vim
        * Insert LaTeX code snippets with ease
        * Powerful text-object for LaTeX environments 
        * Omni-completion of BibTeX database entries and label references
        * Omni-completion of mathematical symbols
        * SyncTeX support (for the Evince document viewer)
        * Filetype specific indentation (courtesy of Johannes Tanzler)
        * LaTeX2e manual (ported to Vim by Mikolaj Machowski)
        * No-hassle settings, relatively few mappings

    Shoutouts & thanks
        * Carl Mueller, this ftplugin was inspired by his `auctex.vim' script
        * Vim-LaTeX people Srinath Avadhanula, Mikolaj Machowski and Benji Fisher
        * Johannes Tanzler, Jose Aliste, Sergio Losilla
        * Peter Lewis, Volker Lorrmann

==============================================================================

*TeX-7* *tex_seven*

    1.  Installation                                 |tex_seven-installation||
    2.  Basics                                       |tex_seven-basics|
    3.  Advanced                                     |tex_seven-advanced|
    4.  Snippets                                     |tex_seven-snippets|
    5.  BibTeX                                       |tex_seven-bibtex|
    6.  Mappings                                     |tex_seven-mappings|
    7.  Tips and trick                               |tex_seven-tips|

==============================================================================

1.  Installation                                    *tex_seven-installation*

    TeX-7 is distributed as a gzipped tarball. Unzip it to your local
    runtime path, usually `~/.vim/'.

    Next, open up |vimrc| and ensure it contains the following lines
    >
        filetype plugin indent on
        let g:tex_flavor = 'latex'
<
    For basic usage you don't need to configure anything else. However,
    you may tweak some features of TeX-7 by defining a |Dictionary| called
    `g:tex_seven_config' in your vimrc. The following keys are recognized:

    leader: String
        *   Most TeX-7 mappings begin with this prefix
        *   Optional
        *   Default: The values of |mapleader|  and |maplocalleader| are
            honored. Otherwise set to colon ':'.

    viewer: Dictionary
        *   Application used for viewing documents.
        *   Vim dictionary with keys 'app' and 'target'.
        *   Optional
        *   Default: {'app': 'xdg-open', 'target': 'pdf'}
    
    verbose: Boolean
        *   Controls the amount of output in error logs
        *   Error messages are gathered in a ||quickfix|| list that
            you may access by typing <LocalLeader>Q in normal mode.
        *   Optional
        *   Default: 0 (Less verbose logs)

    synctex: Boolean
        * Highlight current source code position in a PDF viewer and vice
          versa.
        * GVim/Evince only.
        * See |tex_seven-advanced| for details
        * Optional
        * Default: 0 (Disabled)

    disable: Boolean
        * TeX-7 is disabled temporarily.
        * Default: 0 (TeX-7 is loaded)

    diamond_tex: Boolean
        * TeX-9's originally mapped <LocalLeader>< to \leq, and <LocalLeader>> to \geq. However, I find these LaTeX commands actually easy to type, to I prefer to map <LocalLeader>< to nothing, and <LocalLeader>> to <> (sometimes called diamond). Among other things, this is useful when writing Beamer templates.
        * Default: 0 (map <LocalLeader>> to <>)

    Examples: >

    " Old school LaTeX user    
    let g:tex_seven_config = {
        \'compiler': 'latex',
        \'viewer': {'app':'xdvi', 'target':'dvi'},
    \}

    " A MacVim user
    let g:tex_seven_config = {
            \'compiler': 'pdflatex',
            \'viewer': {'app':'open', 'target':'pdf'},
    \}

    " Xelatex user who wants SyncTeX support
    let g:tex_seven_config = {
        \'compiler': 'xelatex',
        \'synctex': 1
    \}

    " Makefile users
    let g:tex_seven_config = {
        \'compiler': 'make',
        \'verbose': 1
    \}
<

==============================================================================

2.  Basics                                          *tex_seven-basics*

    TeX-7 defines various mappings that speed up typesetting LaTeX code. Most
    of the mappings are prefixed with a leader referred below with the symbol
    <LocalLeader>. If you have set `g:tex_seven_config.leader',
    |maplocalleader| or |mapleader|, the corresponding character is used.
    Otherwise, the leader defaults to colon (:).

    TeX-7 uses relative paths in several places; hence, especially for
    multi-file projects, it is recommended to lauch `(g)vim' from the same
    folder where the main `.tex' file is located.

    Below is a short tutorial that should get you going in no time. Users who
    want to use SyncTeX, split their LaTeX manuscripts in several files and/or
    use different kinds of LaTeX compilers at the same time should also read
    the |tex_seven-advanced| section.

2.1. Templates

    The buttons <F1>, <F2> and <F3> insert skeleton files for the article
    documentclass with the preamble adjusted for xelatex, pdflatex and
    latex respectively. Press <F4> to insert a barebone template that is
    intended for Makefile users. Edit the files in the `skeleton' folder
    to customize the templates to your taste.

2.2. Insert mode

    Type <LocalLeader>M to get a popup list of different maths symbols. In
    addition, the most frequently used maths symbols have their own
    shortcuts.  Typing <LocalLeader>a expands to \alpha for example. Refer
    to |tex_seven-mappings| for a complete listing.

    Type <LocalLeader>C to insert a citation, i.e. `\cite{citekey}'. You're
    prompted with a popup list of completions if the \bibliography{} statement
    contains a valid BibTeX file (see |tex_seven-bibtex| for details). Inserting
    references, `\ref{ref}', works in a similar way. The corresponding mapping is
    <LocalLeader>R.

    To insert an environment, press <LocalLeader>B. You're prompted for an
    environment name and if a corresponding LaTeX code snippet was defined,
    it is inserted into the file (see |tex_seven-snippets|).

2.3. Normal mode

    The mapping <LocalLeader>k, `small compile', compiles your document
    once and doesn't bother about references; <LocalLeader>K, `big
    compile', calls additionally bibtex and should get the cross-references
    right. You're informed about potential errors. To go over them, open
    the ||quickfix|| list with <LocalLeader>Q. Typing <LocalLeader>V should
    open the document in your desktop's default PDF viewer, if you didn't
    set `g:tex_seven_config.viewer' to something else.

    Should you need advice on LaTeX, consult the LaTeX2e manual with `:help
    latex'.


==============================================================================

3.  Advanced                                        *tex_seven-advanced*

3.1 Automatic compiler detection/Changing compiler on-the-fly

    Some users need to switch between different LaTeX compilers. For this
    reason TeX-7 allows you to leave the setting `g:tex_seven_config.compiler'
    undefined and let TeX-7 determine the compiler on a file-by-file basis
    from a modeline of the form
>
    %     Compiler: COMPILER
<
    where COMPILER could for example be `pdflatex'. The modeline should appear
    in the ten first lines of the (main) LaTeX file. If you change the line
    containing COMPILER, remember to make the changes effective by pressing
    <LocalLeader>U in normal mode. 
    
    A recipe for changing the compiler on the fly would be

    1. Yank the entire document environment (see Extras in |tex_seven-mappings|)
    2. Change template (<F1>, <F2>, <F3>, <F4>)
    3. Paste the yanked text back in the buffer
    4. Update changes (<LocalLeader>U)

    NB! If you are only using one compiler all the time, it is recommended to
    set `g:tex_seven_config.compiler' in |vimrc|. This way you can compile even
    your old LaTeX files without problems.

3.2. Multi-file projects

    The traditional way to handle multi-file projects is to set up a Makefile
    and compile with `make'. TeX-7 supports this behavior via the
    `g:tex_seven_config.compiler' option which can be set to `make'.

    You can save yourself the trouble of writing a Makefile by indicating the
    relative location of the main file in the \include-ed files with a modeline
    of the form
>
    % mainfile: MASTER_FILE
<
    The string MASTER_FILE could be for example `../main.tex' if the included file
    is in a subdirectory of the actual compilation folder. The modeline may appear
    in the three first or three last lines of the document. This way all the
    TeX-7 mappings continue to work as expected wherever you are in your
    project.

    NB! Make sure the filename MASTER_FILE does not contain any whitespace and
    have the main file to be active in Vim (see |active-buffers|). Otherwise
    TeX-7 cannot access its contents which is required for some features.  

3.3  SyncTeX                                         *tex_seven-synctex*

    If you have set `g:tex_seven_config.synctex' and use Evince
    (http://projects.gnome.org/evince), you can Ctrl-click a line in Evince
    and see the corresponding line highlighted in GVim! This is called
    forward searching. Backward searching works similarly: you select a
    cursor position in GVim and click <C-LeftMouse> on the position. The
    correct line should then be highlighted in Evince. SyncTeXing from
    included files works too, but remember to set the modeline to the
    correct main file (see above).

    The requirements for SyncTeX support are: dbus-python and a Vim
    installation _without_ a python3 interpreter. The feature is known to
    work correctly with Evince 3.8.3 and TeXLive 2013.

==============================================================================

4.  Snippets                                        *tex_seven-snippets*

    When you want to insert a LaTeX snippet with <LocalLeader>B,
    notice that the input prompt is <Tab>-completable. Your input is
    matched against words in `tex_dictionary.txt'. Once entered, the
    name of the environment is matched against keywords in the file
    `snippets/tex_snippets.snippets'. Matching snippets are inserted.
    Otherwise TeX-7 inserts a generic environment in LaTeX manuscripts
    and raises an error in BibTeX files.
    >
        % Generic environment
        \begin{keyword}

        \end{keyword}
<
    You may extend the snippet file with your own environments and you will
    notice that the syntax bears resemblance with Michael Sander's snipMate
    plugin (http://www.vim.org/scripts/script.php?script_id=2540). TeX-7
    leaves the <Tab> key untouched so that you may still resort to snipMate
    if you so prefer. If your custom environments is not included in
    `tex_dictionary.txt', append it there. >
            
        :cd ~/.vim/ftplugin/TeX_7/dictionaries
        :!echo 'new_environment' >> tex_dictionary.txt
<
==============================================================================

5.  BibTeX                                          *tex_seven-bibtex*

    When adding entries in BibTeX databases or appending new databases in the
    \bibliography{} statement, you need tell TeX-7 to update its citekey
    database. This is accomplished by typing <LocalLeader>U in normal mode.

    In addition to citekey completion, TeX-7 provides a preview feature
    that makes it easier to work with BibTeX and LaTeX files in the same
    Vim session. You may take a quick peek at a particular BibTeX entry
    by pressing `gb' over its citekey, i.e. \cite{citekey}. This command
    is in line with ||gd|| and  |gf| with the exception that the BibTeX
    entry is shown in a  |preview-window||.


==============================================================================

6.  Mappings                                        *tex_seven-mappings*

    The symbol <LocalLeader> refers to the value of
    `g:tex_seven_config.leader', |maplocalleader|. If none of
    these are set, the default value is colon ':'.

6.1 Insert mode >

        <LocalLeader><LocalLeader>          <LocalLeader>
        <LocalLeader>K                      Dictionary completion
        <LocalLeader>M                      Maths completion 
        <LocalLeader>"                      LaTeX's inverted commas ``''
        <LocalLeader>B                      Insert an environment
        <LocalLeader>C                      Insert a citation
        <LocalLeader>E                      Insert an equation reference
        <LocalLeader>R                      Insert a reference
        <LocalLeader>Z                      Insert an \includeonly reference
<
        Greek
        >
        <LocalLeader>a                      \alpha
        <LocalLeader>b                      \beta
        <LocalLeader>c                      \chi
        <LocalLeader>d                      \delta
        <LocalLeader>e                      \varepsilon
        <LocalLeader>/e                     \epsilon
        <LocalLeader>f                      \varphi
        <LocalLeader>/f                      \phi
        <LocalLeader>g                      \gamma
        <LocalLeader>h                      \eta
        <LocalLeader>k                      \kappa
        <LocalLeader>l                      \lambda
        <LocalLeader>m                      \mu
        <LocalLeader>n                      \nu
        <LocalLeader>o                      \omega
        <LocalLeader>p                      \pi
        <LocalLeader>q                      \theta
        <LocalLeader>r                      \varrho
        <LocalLeader>s                      \sigma
        <LocalLeader>t                      \tau
        <LocalLeader>u                      \upsilon
        <LocalLeader>w                      \varpi
        <LocalLeader>x                      \xi
        <LocalLeader>y                      \psi
        <LocalLeader>z                      \zeta
        <LocalLeader>D                      \Delta
        <LocalLeader>F                      \Phi
        <LocalLeader>G                      \Gamma
        <LocalLeader>L                      \Lambda
        <LocalLeader>O                      \Omega
        <LocalLeader>P                      \Pi
        <LocalLeader>Q                      \Theta
        <LocalLeader>U                      \Upsilon
        <LocalLeader>X                      \Xi
        <LocalLeader>Y                      \Psi
<
        Maths
        >
        <LocalLeader>\                      \setminus
        <LocalLeader>Â½                      \sqrt{}
        <LocalLeader>N                      \nabla
        <LocalLeader>S                      \sum_{}^{}
        <LocalLeader>/S                     \prod_{}^{}
        <LocalLeader>V                      \vec{}
        <LocalLeader>I                      \int\limits_{}^{}
        <LocalLeader>0                      \varnothing
        <LocalLeader>/0                      \emptyset
        <LocalLeader>6                      \partial
        <LocalLeader>i                      \infty
        <LocalLeader>/                      \frac{}{}
        <LocalLeader>v                      \vee
        <LocalLeader>&                      \wedge
        <LocalLeader>/v                     \bigvee
        <LocalLeader>/&                     \bigwedge
        <LocalLeader>@                      \circ
        <LocalLeader>*                      \not
        <LocalLeader>!                      \neq
        <LocalLeader>~                      \neg
        <LocalLeader>=                      \equiv
        <LocalLeader>-                      \cap
        <LocalLeader>+                      \cup
        <LocalLeader>/-                     \bigcap
        <LocalLeader>/+                     \bigcup
        <LocalLeader><                      \leq
        <LocalLeader>>                      \geq
        <LocalLeader>~                      \widetilde{}
        <LocalLeader>^                      \widehat{}
        <LocalLeader>_                      \overline{}
        <LocalLeader>.                      \cdot
        <LocalLeader><CR>                   \nonumber\\<CR>
        <LocalLeader>(                      \left(\right)
        <LocalLeader>[                      \left[\right]
        <LocalLeader>{                      \left{\right}
        <LocalLeader>Â«                      \langle
        <LocalLeader>Â»                      \rangle

        The choice for some mappings, that start with a forward slash
        '/', might seem odd. The reason is for when are multiple choices,
        e.g. for the letters phi and epsilon. In those cases, I put the
        version I prefer best (e.g. \varphi) with the most natural
        mapping (<LocalLeader>f), and the other one (\phi) with the
        "slashed" mapping (<LocalLeader>/f). Of course, this means Vim
        will introduce a slight delay before expanding <LocalLeader>/
        (to see if it is actually any of the other mappings that also
        start with a '/'). But as I do not use <LocalLeader>/ much (this
        is a case I prefer to deal with a snippet from snipMate), this
        doesn't bother me much.

6.2 Normal Mode >

        gd                                  Goto label's declaration
        gb                                  Goto citekey's declaration
        <LocalLeader>V                      View the document
        <LocalLeader>U                      Reconfigure TeX-7

6.4 Extras

    TeX-7 comes with a custom `environment operator' (see ||text-objects||).
    Press 'vie' or 'vae' in normal normal to highlight the current inner
    environment (without the \begin and \end statements) or the outer
    environment respectively. Replace 'v' with another operator to achieve
    yanking, changing or deleting etc. For example, typing 'dae' makes it
    trivial to move figures and tables around in the document. Delete the
    environment, find a new location and paste it back to the buffer!
    
    There are also some macros that work by tapping a character on your
    keyboard (super convenient for subscripts and superscripts!).     

    >
        ^^ -> ^{}
        __ -> _{}
        ~~ -> \approx
        == -> &=
<
    Finally, try omni-completion () inside curly braces when you're
    including a picture with `\includegraphics{}' or when you're setting your
    font with the `fontspec' package, e.g. `\setmainfont{}'. You'll get a
    listing of pictures in the compilation folder in the first case and a list
    of installed font on your system in the latter. Supported picture formats
    are EPS, PDF, JPG and PNG. 

==============================================================================

7.  Tips and trick                                  *tex_seven-tips*

7.1.    Preferred way to override, extend and hack TeX-7

        Create a custom tex.vim file in the after directory, i.e.
        ~/.vim/after/ftplugin/tex.vim. Here you can redefine mappings and
        extend TeX-7's functionality with your own ideas. If you come up with
        something sweet, drop me a line (email address available on Vim.org
        and in the README).

7.2     Spell checking

        If you've enabled 'modeline', you may conveniently activate spell
        checking in your LaTeX documents by editing the modeline in the
        skeleton file.

        Example for anglophones: >

                % vim:tw=66 sw=2 ft=tex spell spelllang=en
<
        Notice that newer versions of Vim provide an option >

                let g:tex_comment_nospell= 1

<       for disabling spell checking of comments that otherwise get messed up
       pretty badly.

7.3     Folding

        With newer versions of Vim it's easy as >

                let g:tex_fold_enabled = 1

7.4     SyncTeXing without Evince

        It might be possible to get SyncTeX working with some other PDF viewers, but
        you'd need the write wrapper scripts by yourself. However, there's one TeX-7
        function that you might find useful. If you want to know the absolute name of
        the PDF file in your project, you can use the function
        `tex_seven#GetOutputFile()'.

        To avoid conflicts with Evince, please leave
        `g:tex_seven_config.synctex' unset and ensure you have
>
             \synctex=1
<
        in your preamble.

7.5.    Custom templates

        I like to include some extra packages in the preamble. Here's what I
        have in my ~/.vim/after/ftplugin/tex.vim

        >
        let custom_template = expand('$HOME').'/.vim/after/ftplugin/tex_skeleton.tex.custom'
        noremap <buffer><silent> <F1> :call tex_seven#InsertSkeleton(custom_template)<CR>
<

7.6     Change the typeface of a word, sentence...

        If you are not using Tim Pope's famous `surround.vim' plugin and would
        like to have neat way of changing the typeface of text, you can add
        these mappings to ~/.vim/after/ftplugin/tex.vim.

            >
            vmap <buffer><expr> bf tex_seven#ChangeFontStyle('bf')
            vmap <buffer><expr> it tex_seven#ChangeFontStyle('it')
            vmap <buffer><expr> rm tex_seven#ChangeFontStyle('rm')
            vmap <buffer><expr> sf tex_seven#ChangeFontStyle('sf')
            vmap <buffer><expr> tt tex_seven#ChangeFontStyle('tt')
            vmap <buffer> up di\text{}<Left><C-R>"
<
        For example, to convert the word under the cursor to boldface, type
        >
            viwbf
<

==============================================================================


 vim:tw=72:ts=8:ft=help:norl:autoindent


